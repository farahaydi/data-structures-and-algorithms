/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashtable;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void testSetAndGet() {
        Hashtable hashtable = new Hashtable(10);
        hashtable.set("name", "John Doe");
        assertEquals("John Doe", hashtable.get("name"));
    }

    @Test
    public void testNullForNonExistentKey() {
        Hashtable hashtable = new Hashtable(10);
        assertNull(hashtable.get("nonexistent"));
    }

    @Test
    public void testUniqueKeysList() {
        Hashtable hashtable = new Hashtable(10);
        hashtable.set("name", "John Doe");
        hashtable.set("age", "30");
        hashtable.set("email", "john@example.com");

        assertEquals(3, hashtable.keys().size());
    }

    @Test
    public void testCollisionHandling() {
        Hashtable hashtable = new Hashtable(10);
        hashtable.set("a", "Value1");
        hashtable.set("k", "Value2");

        assertEquals("Value1", hashtable.get("a"));
        assertEquals("Value2", hashtable.get("k"));
    }

    @Test
    public void testRetrieveValueFromCollisionBucket() {
        Hashtable hashtable = new Hashtable(10);
        hashtable.set("a", "Value1");
        hashtable.set("k", "Value2");

        assertEquals("Value2", hashtable.get("k"));
    }

    @Test
    public void testHashInRange() {
        Hashtable hashtable = new Hashtable(10);
        for (int i = 0; i < 100; i++) {
            String key = "key" + i;
            int hashedIndex = hashtable.hash(key);
            assertTrue(hashedIndex >= 0 && hashedIndex < 10, "Hashed index for key " + key + " is out of range.");
        }
    }
}

